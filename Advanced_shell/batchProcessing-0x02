#!/bin/bash

base_url="https://pokeapi.co/api/v2/pokemon"

delay=2
max_retries=3
error_log="pokemon_errors.log" > "$error_log"

for id in {1..5}; do
    retry_count=0
    success=0

    while [[ $retry_count -lt $max_retries && $success -eq 0 ]]; do
        echo "Fetching data for PokÃ©mon #$id (Attempt $((retry_count + 1))..."

        name=$(curl -s --fail "$base_url/$id" | jq -r '.name' 2>/dev/null)
        curl_exit_status=$?

        if [[ $curl_exit_status -ne 0 ]]; then
            echo "Network error fetching #$id. Retrying..." >&2
            ((retry_count++))
            sleep "$delay"
            continue
        fi

        if [[ -z "$name" || "$name" == "null" ]]; then
            echo "Invalid data for #$id. Retrying..." >&2
            ((retry_count++))
            sleep "$delay"
            continue
        fi

        filename="${name}.json"
        
        curl -s --fail "$base_url/$id" > "$filename"
        curl_exit_status=$?

        if [[ $curl_exit_status -ne 0 ]]; then
            echo "Failed to save data for #$id. Retrying..." >&2
            ((retry_count++))
            sleep "$delay"
            continue
        fi

        if jq empty "$filename" 2>/dev/null; then
            echo "Successfully saved #$id ($name) to $filename"
            success=1
        else
            echo "Invalid JSON for #$id. Retrying..." >&2
            rm -f "$filename"
            ((retry_count++))
            sleep "$delay"
        fi
    done

    if [[ $success -eq 0 ]]; then
        error_msg="Failed to fetch #$id after $max_retries attempts"
        echo "$error_msg" >> "$error_log"
        echo "$error_msg" >&2
    fi

    sleep "$delay" 
done

echo "Finito! Check $error_log for any failures."